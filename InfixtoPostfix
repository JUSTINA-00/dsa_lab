import java.util.*;
public class infixtopostfix {
    private static int precedence(char op){
        switch(op){
            case '+':
            case '-':
                return 1;
            case '*':
            case '/':
                return 2;
            case '^':
                return 3;
            default:
                return -1;
        }
    }
    public static String infixtopostfix(String expression){
        Stack<Character>stack = new Stack <>();
        StringBuilder result = new StringBuilder();
        for (int i=0;i<expression.length();i++){
            char c = expression.charAt(i);
            if (Character.isLetterOrDigit(c)){
                result.append(c);
            }else if(c=='(') {
                stack.push(c);
            }else if(c==')'){
                while(!stack.isEmpty()&&stack.peek()!='('){
                    result.append(stack.pop());
                }
                stack.pop();
            }else{
                while(!stack.isEmpty()&&precedence(c)<=precedence(stack.peek())){
                    result.append(stack.pop());
                }
                stack.push(c);
            }
        }
        while(!stack.isEmpty()){
            result.append(stack.pop());
        }
        return result.toString();
    }
    public static void main(String[]args){
        Scanner sc = new Scanner (System.in);
        System.out.println("enter the infix expression");
        String expression = sc.nextLine();
        System.out.println("infix Expression:" + expression);
        System.out.println("postfix Expression:" + infixtopostfix(expression));
    }
}
