package three;
public class linearqueue {
	class Queue{
		int front, rear, MAX;
		int[]queue;
		Queue(int size){
			MAX = size;
			queue = new int [MAX];
			front = -1;
			rear = -1;
		}
		boolean isFull() {
			return rear == MAX-1;
		}
		boolean isEmpty() {
			return front == -1;
		}
		void enqueue(int value) {
			if(isFull()) {
				System.out.println("error:overflow");
			}else {
				if (front==-1) front = 0;
				rear++;
				queue [rear]=value;
			}
		}
		int dequeue() {
			if (isEmpty()) {
				System.out.println("queue underflow");
				return -1;
			}else {
				int x = queue [front];
				if (front == rear) {
					front =-1;
					rear = -1;
				}else {
					front++;
				}
				return x;
			}
		}
		void display() {
			if (isEmpty()) {
				System.out.println("queue is empty");
			}else {
				for (int i = front; i<=rear;i++) {
					System.out.println(queue[i]+" ");
				}
			}
		}
	}
	
}
